using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libFLAC"], :libflac),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/staticfloat/FLACBuilder/releases/download/v1.3.2-1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    BinaryProvider.Linux(:aarch64, :glibc, :blank_abi) => ("$bin_prefix/FLAC.aarch64-linux-gnu.tar.gz", "4f65e4d8a665ce9947f174b67441eb26bef9c924d4f081714b07f9626814e3dc"),
    BinaryProvider.Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/FLAC.arm-linux-gnueabihf.tar.gz", "dec1d76125a3650c510a58e78242af09f10bcbce0824134e1761aa55a8901a89"),
    BinaryProvider.Linux(:i686, :glibc, :blank_abi) => ("$bin_prefix/FLAC.i686-linux-gnu.tar.gz", "a3694e275732e52352553d39db02f86ee98117a6481f9024fd869d85df22d9c7"),
    BinaryProvider.Linux(:i686, :musl, :blank_abi) => ("$bin_prefix/FLAC.i686-linux-musl.tar.gz", "b4d285a91e34901415871789375e892f4878d03501e49f504dca0b6bb74ddbd5"),
    BinaryProvider.Windows(:i686, :blank_libc, :blank_abi) => ("$bin_prefix/FLAC.i686-w64-mingw32.tar.gz", "89ee84df2084a746cbb1f22e75a993270b347921a6788a4fa6d46f8983dfbba6"),
    BinaryProvider.Linux(:powerpc64le, :glibc, :blank_abi) => ("$bin_prefix/FLAC.powerpc64le-linux-gnu.tar.gz", "8bde8f75782bc60e9c4f130f0ef8927997c28e29cd4aa03f5b25037484ac4987"),
    BinaryProvider.MacOS(:x86_64, :blank_libc, :blank_abi) => ("$bin_prefix/FLAC.x86_64-apple-darwin14.tar.gz", "703008957f264ab5a92bd1005a94f1b929bf982c309f3f6a37e5b604f375646e"),
    BinaryProvider.Linux(:x86_64, :glibc, :blank_abi) => ("$bin_prefix/FLAC.x86_64-linux-gnu.tar.gz", "7f51c7a8987433820c62cf63e77a6395ecee4f1fbd11aad25f30e187eee30888"),
    BinaryProvider.Linux(:x86_64, :musl, :blank_abi) => ("$bin_prefix/FLAC.x86_64-linux-musl.tar.gz", "2bf3e181de6092a6d084dfbb9f072c49af110ae5645d23021ff186969eb3122d"),
    BinaryProvider.Windows(:x86_64, :blank_libc, :blank_abi) => ("$bin_prefix/FLAC.x86_64-w64-mingw32.tar.gz", "79a960ed75ec92d388b0310881facb40644e3a358832d638bab9523c16f12fa2"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products)
